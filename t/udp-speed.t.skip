use strict;
use warnings;

use Test::More tests => 1;
use IO::EventMux;
use IO::Socket::INET;
use IO::Select;
use Socket;

# Test that we can send and read data with udp.
my $fh = IO::Socket::INET->new(
    LocalPort    => 10045,
    LocalAddr    => "127.0.0.1",
    ReuseAddr    => 1,    
    Proto        => 'udp',
    Blocking     => 0,
) or die "Could not open socket on (127.0.0.1:10045): $!\n";

my $mux = IO::EventMux->new();
$mux->add($fh);

my $count = 20000;

my $pid = fork;
if($pid == 0) {
    close $fh;
    my $fh = IO::Socket::INET->new(
        PeerAddr => '127.0.0.1',
        PeerPort => 10045,
        Proto    => 'udp',
        Blocking => 1,
    ) or die "Could not open socket on 127.0.0.1 : $!\n";
    for(my $i=0;$i<$count;$i++) {
        $fh->send("hello\n");
        $fh->recv(my $inData, 512, 0);
    }
    close $fh;
    exit;
}

while (my $event = $mux->mux()) {
    if($event->{type} eq 'read') {
        $mux->send($fh, $event->{data});
        if(--$count == 0) { exit; }
        #print "$count\n";
    }
}

waitpid($pid, 0);
